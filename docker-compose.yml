services:
  data-source-proxy:
    build:
      context: ./data-source-proxy
      dockerfile: Dockerfile
    container_name: data-source-proxy
    ports:
      - "8001:8001"
    environment:
      STOCK_API_KEY: ${STOCK_API_KEY:-}
      STOCK_API_BASE_URL: ${STOCK_API_BASE_URL:-}
    restart: unless-stopped
    depends_on:
      core-database:
        condition: service_healthy

  market-data-manager:
    build:
      context: ./market-data-manager
      dockerfile: Dockerfile
    container_name: market-data-manager
    ports:
      - "8002:8002"
    environment:
      DATABASE_URL: postgresql+asyncpg://stockuser:stockpassword@core-database:5432/stock_insights
      DATA_SOURCE_PROXY_URL: http://data-source-proxy:8001
    restart: unless-stopped
    depends_on:
      core-database:
        condition: service_healthy
      data-source-proxy:
        condition: service_started

  core-database:
    image: postgres:16
    container_name: core-database
    environment:
      POSTGRES_USER: stockuser
      POSTGRES_PASSWORD: stockpassword
      POSTGRES_DB: stock_insights
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./core-database/init.sql:/docker-entrypoint-initdb.d/init.sql:Z
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stockuser -d stock_insights"]
      interval: 10s
      timeout: 5s
      retries: 5

  text-processor:
    build:
      context: ./text-processor
      dockerfile: Dockerfile
    container_name: text-processor
    ports:
      - "8003:8003"
    environment:
      DATABASE_URL: postgresql+asyncpg://stockuser:stockpassword@core-database:5432/stock_insights
      LLM_API_KEY: ${LLM_API_KEY:-}
    restart: unless-stopped
    depends_on:
      core-database:
        condition: service_healthy

  backend-api:
    build:
      context: ./backend-api
      dockerfile: Dockerfile
    container_name: backend-api
    ports:
      - "8004:8004"
    environment:
      DATABASE_URL: postgresql+asyncpg://stockuser:stockpassword@core-database:5432/stock_insights
    restart: unless-stopped
    depends_on:
      core-database:
        condition: service_healthy

  analysis-engine:
    build:
      context: ./analysis-engine
      dockerfile: Dockerfile
    container_name: analysis-engine
    ports:
      - "8005:8005"
    environment:
      DATABASE_URL: postgresql+asyncpg://stockuser:stockpassword@core-database:5432/stock_insights
    restart: unless-stopped
    depends_on:
      core-database:
        condition: service_healthy

volumes:
  pgdata:
